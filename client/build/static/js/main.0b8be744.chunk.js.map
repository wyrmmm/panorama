{"version":3,"sources":["components/shared/MapCard.jsx","hooks/hooks.jsx","actions/actions.js","components/News.jsx","components/Tweets.jsx","components/GoogleTrends.jsx","components/App.jsx","serviceWorker.js","reducers/reducers.js","index.js"],"names":["cardStyle","css","spanStyle","titleStyle","MapCard","props","title","children","rest","ref","useRef","hoverStyle","useState","setHover","enter","leave","useEffect","currentRef","current","addEventListener","removeEventListener","cursor","useHover","draggableStyle","top","left","offset","setOffset","origin","setOrigin","start","setStart","translateVector","setTranslateVector","isDragging","setIsDragging","mousedown","event","target","getBoundingClientRect","y","x","mousemove","mouseup","document","undefined","transform","transition","useDraggable","style","data-testid","fetchTrendingTweetsSuccess","tweets","type","payload","receivedAt","Date","now","newsCardStyle","articleStyle","articleAuthorStyle","connect","state","countries","news","dispatch","currentCountry","available","countryCode","a","pending","fetch","response","json","articles","error","fetchNews","console","log","data","length","map","article","index","split","author","key","tweetsCardStyle","id","trends","tweet","name","googleTrendsCardStyle","googleTrendsCountStyle","googleTrends","toUpperCase","fetchGoogleTrends","count","divStyle","latitude","longitude","zoom","bearing","pitch","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","viewport","setViewport","previousCountry","setPreviousCountry","className","Group","align","Alignment","LEFT","Heading","defaultValue","Object","keys","country","onClick","setCountry","width","height","mapboxApiAccessToken","process","onViewportChange","Boolean","window","location","hostname","match","countriesInitialState","Algeria","lat","lng","Argentina","Australia","Austria","Bahrain","Belarus","Belgium","Brazil","Canada","Chile","Colombia","Denmark","Ecuador","Egypt","France","Germany","Ghana","Greece","Guatemala","India","Indonesia","Ireland","Israel","Italy","Japan","Jordan","Kenya","Kuwait","Latvia","Lebanon","Malaysia","Mexico","Netherlands","Nigeria","Norway","Oman","Pakistan","Panama","Peru","Philippines","Poland","Portugal","Qatar","Singapore","Spain","Sweden","Switzerland","Thailand","Turkey","Ukraine","tweetsInitialState","newsInitialState","googleTrendsInitialState","rootReducer","combineReducers","action","assign","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b8be744.chunk.js","sourcesContent":["/** @jsx jsx */\nimport React, { useRef } from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport { Card } from \"@blueprintjs/core\";\nimport PropTypes from \"prop-types\";\nimport { useHover, useDraggable } from \"hooks/hooks\";\n\nlet cardStyle = css`\n  background-color: #273d56;\n  opacity: 0.75;\n  color: #fff;\n  position: fixed;\n  padding: 0;\n`;\n\nlet spanStyle = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 3px 3px 0 0;\n  width: 100%;\n  height: 12px;\n  background: rgba(255, 255, 255, 0.75);\n`;\n\nlet titleStyle = css`\n  font-weight: 700;\n  font-size: 16px;\n  padding: 30px 30px 0 30px;\n`;\n\nconst MapCard = props => {\n  const { title, children, ...rest } = props;\n  const ref = useRef();\n  const hoverStyle = useHover(ref);\n  const draggableStyle = useDraggable(ref);\n\n  return (\n    <Card css={cardStyle} {...rest} style={{ ...draggableStyle }}>\n      <div\n        css={css`\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n        `}\n      >\n        <div>\n          <span css={spanStyle} ref={ref} style={{ ...hoverStyle }} data-testid=\"mapcard-header\" />\n          <p css={titleStyle}>{title}</p>\n        </div>\n        <div\n          css={css`\n            padding: 0 30px 30px 30px;\n            flex: 1;\n            overflow-y: auto;\n          `}\n        >\n          {children}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nMapCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\n\nexport default MapCard;\n","import { useState, useEffect } from \"react\";\n\nexport const useHover = ref => {\n  const [, setHover] = useState(false);\n\n  const enter = () => setHover(true);\n  const leave = () => setHover(false);\n\n  useEffect(() => {\n    const currentRef = ref.current;\n    currentRef.addEventListener(\"mouseenter\", enter);\n    currentRef.addEventListener(\"mouseleave\", leave);\n\n    return () => {\n      currentRef.removeEventListener(\"mouseenter\", enter);\n      currentRef.removeEventListener(\"mouseleave\", leave);\n    };\n  });\n\n  return { cursor: \"move\" };\n};\n\nexport const useDraggable = ref => {\n  const [offset, setOffset] = useState({ top: 0, left: 0 });\n  const [origin, setOrigin] = useState();\n  const [start, setStart] = useState();\n  const [translateVector, setTranslateVector] = useState();\n  const [isDragging, setIsDragging] = useState(false);\n\n  const mousedown = event => {\n    const { top, left } = event.target.getBoundingClientRect();\n    setOrigin({ top, left });\n    setIsDragging(true);\n    setStart({ top: event.y, left: event.x });\n  };\n\n  const mousemove = event => {\n    if (isDragging && start) {\n      // console.log(event);\n      // console.log(\n      //   `top: ${event.y} - ${start.top} + ${origin.top} - ${offset.top} = ${event.y -\n      //     start.top +\n      //     origin.top -\n      //     offset.top}`\n      // );\n      // console.log(\n      //   `left: ${event.x} - ${start.left} + ${origin.left} - ${offset.left} = ${event.x -\n      //     start.left +\n      //     origin.left -\n      //     offset.left}`\n      // );\n      setTranslateVector({\n        top: event.y - start.top + origin.top - offset.top,\n        left: event.x - start.left + origin.left - offset.left\n      });\n    }\n  };\n\n  const mouseup = () => {\n    setIsDragging(false);\n  };\n\n  useEffect(() => {\n    const { top, left } = ref.current.getBoundingClientRect();\n    if (top === 0 && left === 0) {\n      return;\n    }\n    setOffset({ top, left });\n  }, []);\n\n  useEffect(() => {\n    const currentRef = ref.current;\n    currentRef.addEventListener(\"mousedown\", mousedown);\n\n    return () => {\n      currentRef.removeEventListener(\"mousedown\", mousedown);\n    };\n  });\n\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener(\"mousemove\", mousemove);\n      document.addEventListener(\"mouseup\", mouseup);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousemove\", mousemove);\n      document.removeEventListener(\"mouseup\", mouseup);\n    };\n  });\n  if (translateVector === undefined) {\n    return {};\n  } else {\n    return {\n      transform: `translate(${translateVector.left}px, ${translateVector.top}px)`,\n      transition: \"transform 0.05s cubic-bezier(0.2, 0, 0, 1)\"\n    };\n  }\n};\n","export const SET_LOCATION = \"SET_LOCATION\";\nexport const FETCH_TRENDING_TWEETS_PENDING = \"FETCH_TRENDING_TWEETS_PENDING\";\nexport const FETCH_TRENDING_TWEETS_SUCCESS = \"FETCH_TRENDING_TWEETS_SUCCESS\";\nexport const FETCH_TRENDING_TWEETS_ERROR = \"FETCH_TRENDING_TWEETS_ERROR\";\nexport const FETCH_NEWS_PENDING = \"FETCH_NEWS_PENDING\";\nexport const FETCH_NEWS_SUCCESS = \"FETCH_NEWS_SUCCESS\";\nexport const FETCH_NEWS_ERROR = \"FETCH_NEWS_ERROR\";\nexport const FETCH_GOOGLE_TRENDS_PENDING = \"FETCH_GOOGLE_TRENDS_PENDING\";\nexport const FETCH_GOOGLE_TRENDS_SUCCESS = \"FETCH_GOOGLE_TRENDS_SUCCESS\";\nexport const FETCH_GOOGLE_TRENDS_ERROR = \"FETCH_GOOGLE_TRENDS_ERROR\";\n\nexport const setCountry = country => {\n  return { type: SET_LOCATION, payload: country };\n};\n\nexport const fetchTrendingTweetsPending = () => {\n  return { type: FETCH_TRENDING_TWEETS_PENDING };\n};\n\nexport const fetchTrendingTweetsSuccess = tweets => {\n  return {\n    type: FETCH_TRENDING_TWEETS_SUCCESS,\n    payload: tweets,\n    receivedAt: Date.now()\n  };\n};\n\nexport const fetchTrendingTweetsError = error => {\n  return { type: FETCH_TRENDING_TWEETS_ERROR, error };\n};\n\nexport const fetchTrendingTweets = id => {\n  return async dispatch => {\n    dispatch(fetchTrendingTweetsPending());\n\n    try {\n      const response = await fetch(`https://www.trendsaroundtheworld.com/tweets/trends/${id}`);\n      const json = await response.json();\n      const tweets = json[0].trends;\n      dispatch(fetchTrendingTweetsSuccess(tweets));\n    } catch (error) {\n      dispatch(fetchTrendingTweetsError(error));\n    }\n  };\n};\n\nexport const fetchNewsPending = () => {\n  return { type: FETCH_NEWS_PENDING, pending: true };\n};\n\nexport const fetchNewsSuccess = news => {\n  return {\n    type: FETCH_NEWS_SUCCESS,\n    pending: false,\n    payload: news,\n    receivedAt: Date.now()\n  };\n};\n\nexport const fetchNewsError = error => {\n  return { type: FETCH_NEWS_ERROR, pending: false, error };\n};\n\nexport const fetchNews = countryCode => {\n  return async dispatch => {\n    dispatch(fetchNewsPending());\n    try {\n      const response = await fetch(`https://www.trendsaroundtheworld.com/news/?country=${countryCode}`);\n      const json = await response.json();\n      const articles = json.articles;\n      dispatch(fetchNewsSuccess(articles));\n    } catch (error) {\n      dispatch(fetchNewsError(error));\n    }\n  };\n};\n\nexport const fetchGoogleTrendsPending = () => {\n  return { type: FETCH_GOOGLE_TRENDS_PENDING, pending: true };\n};\n\nexport const fetchGoogleTrendsSuccess = googleTrends => {\n  return {\n    type: FETCH_GOOGLE_TRENDS_SUCCESS,\n    pending: false,\n    payload: googleTrends,\n    receivedAt: Date.now()\n  };\n};\n\nexport const fetchGoogleTrendsError = error => {\n  return { type: FETCH_GOOGLE_TRENDS_ERROR, pending: false, error };\n};\n\nexport const fetchGoogleTrends = countryCode => {\n  return async dispatch => {\n    dispatch(fetchGoogleTrendsPending());\n    try {\n      const response = await fetch(`https://www.trendsaroundtheworld.com/googletrends/?location=${countryCode}`);\n      const json = await response.json();\n      dispatch(fetchGoogleTrendsSuccess(json));\n    } catch (error) {\n      dispatch(fetchGoogleTrendsError(error));\n    }\n  };\n};\n","/** @jsx jsx */\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { css, jsx } from \"@emotion/core\";\nimport MapCard from \"components/shared/MapCard\";\nimport { fetchNews } from \"actions/actions\";\nimport { Spinner } from \"@blueprintjs/core\";\n\nconst newsCardStyle = css`\n  top: 72px;\n  left: 24px;\n  width: 320px;\n  height: 500px;\n`;\n\nconst articleStyle = css`\n  margin: 12px 0 24px 0;\n`;\n\nconst articleAuthorStyle = css`\n  font-style: italic;\n  opacity: 0.7;\n`;\n\nconst News = props => {\n  const {\n    dispatch,\n    countries: { current: currentCountry, available: countries },\n    news\n  } = props;\n\n  useEffect(() => {\n    const countryCode = countries[currentCountry][\"ISO-3166\"];\n    dispatch(fetchNews(countryCode));\n  }, [currentCountry]);\n\n  const { pending, error } = news;\n  console.log(error);\n  if (pending) {\n    return (\n      <MapCard css={newsCardStyle} title=\"Trending Tweets\">\n        <Spinner\n          css={css`\n            height: 100%;\n          `}\n        />\n      </MapCard>\n    );\n  }\n\n  if (error) {\n    return (\n      <MapCard css={newsCardStyle} title=\"Trending Tweets\">\n        Unable to fetch data for this country.\n      </MapCard>\n    );\n  }\n\n  return (\n    <MapCard css={newsCardStyle} title=\"Latest News\">\n      {news.data.length !== 0 &&\n        news.data.map((article, index) => {\n          const { title: temp } = article;\n          const [title, author] = temp.split(\" - \");\n          return (\n            <div key={index} css={articleStyle}>\n              <div>{title}</div>\n              <div css={articleAuthorStyle}>{author}</div>\n            </div>\n          );\n        })}\n      {news.data.length === 0 && \"There were no articles for this country.\"}\n    </MapCard>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.countries,\n    news: state.news\n  };\n};\n\nexport default connect(mapStateToProps)(News);\n","/** @jsx jsx */\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { css, jsx } from \"@emotion/core\";\nimport MapCard from \"components/shared/MapCard\";\nimport { fetchTrendingTweets } from \"actions/actions\";\nimport { Spinner } from \"@blueprintjs/core\";\n\nconst tweetsCardStyle = css`\n  top: 72px;\n  right: 24px;\n  width: 250px;\n  height: 300px;\n`;\n\nconst Tweets = props => {\n  const {\n    tweets,\n    dispatch,\n    countries: { current: currentCountry, available: countries }\n  } = props;\n\n  useEffect(() => {\n    dispatch(fetchTrendingTweets(countries[currentCountry].id));\n  }, [currentCountry]);\n\n  const { pending, error } = tweets;\n  if (pending) {\n    return (\n      <MapCard css={tweetsCardStyle} title=\"Trending Tweets\">\n        <Spinner\n          css={css`\n            height: 100%;\n          `}\n        />\n      </MapCard>\n    );\n  }\n\n  if (error) {\n    return (\n      <MapCard css={tweetsCardStyle} title=\"Trending Tweets\">\n        Unable to fetch data for this country.\n      </MapCard>\n    );\n  }\n\n  return (\n    <MapCard css={tweetsCardStyle} title=\"Trending Tweets\">\n      {tweets.data.map((tweet, index) => (\n        <div\n          key={index}\n          css={css`\n            margin: 12px 0;\n          `}\n        >\n          {tweet.name}\n        </div>\n      ))}\n    </MapCard>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.countries,\n    tweets: state.tweets\n  };\n};\n\nexport default connect(mapStateToProps)(Tweets);\n","/** @jsx jsx */\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { css, jsx } from \"@emotion/core\";\nimport MapCard from \"components/shared/MapCard\";\nimport { fetchGoogleTrends } from \"actions/actions\";\nimport { Spinner } from \"@blueprintjs/core\";\n\nconst googleTrendsCardStyle = css`\n  right: 24px;\n  bottom: 48px;\n  width: 250px;\n  height: 300px;\n`;\n\nconst googleTrendsCountStyle = css`\n  font-style: italic;\n  opacity: 0.7;\n`;\n\nconst GoogleTrends = props => {\n  const {\n    googleTrends,\n    dispatch,\n    countries: { current: currentCountry, available: countries }\n  } = props;\n\n  useEffect(() => {\n    const countryCode = countries[currentCountry][\"ISO-3166\"].toUpperCase();\n    dispatch(fetchGoogleTrends(countryCode));\n  }, [currentCountry]);\n\n  const { pending, error } = googleTrends;\n  if (pending) {\n    return (\n      <MapCard css={googleTrendsCardStyle} title=\"Trending Tweets\">\n        <Spinner\n          css={css`\n            height: 100%;\n          `}\n        />\n      </MapCard>\n    );\n  }\n\n  if (error) {\n    return (\n      <MapCard css={googleTrendsCardStyle} title=\"Trending Tweets\">\n        Unable to fetch data for this country.\n      </MapCard>\n    );\n  }\n\n  return (\n    <MapCard css={googleTrendsCardStyle} title=\"Google Trends\">\n      {googleTrends.data.map(({ title, count }, index) => {\n        return (\n          <div\n            key={index}\n            css={css`\n              margin: 12px 0;\n            `}\n          >\n            <div>{title}</div>\n            <div css={googleTrendsCountStyle}>{count}</div>\n          </div>\n        );\n      })}\n    </MapCard>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.countries,\n    googleTrends: state.googleTrends\n  };\n};\n\nexport default connect(mapStateToProps)(GoogleTrends);\n","/** @jsx jsx */\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { css, jsx } from \"@emotion/core\";\nimport { Navbar, Alignment } from \"@blueprintjs/core\";\nimport ReactMapGL, { FlyToInterpolator } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport News from \"components/News\";\nimport Tweets from \"components/Tweets\";\nimport GoogleTrends from \"components/GoogleTrends\";\nimport { setCountry } from \"actions/actions\";\n\nconst divStyle = css`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst App = props => {\n  const {\n    countries: { current: currentCountry, available: countries },\n    dispatch\n  } = props;\n\n  const [viewport, setViewport] = useState({\n    latitude: countries[currentCountry][\"lat\"],\n    longitude: countries[currentCountry][\"lng\"],\n    zoom: 5,\n    bearing: 0,\n    pitch: 0,\n    transitionInterpolator: new FlyToInterpolator({ speed: 2 }),\n    transitionDuration: 2000\n  });\n\n  const [previousCountry, setPreviousCountry] = useState(currentCountry);\n\n  if (currentCountry !== previousCountry) {\n    setPreviousCountry(currentCountry);\n    const latitude = countries[currentCountry][\"lat\"];\n    const longitude = countries[currentCountry][\"lng\"];\n    setViewport({ ...viewport, latitude, longitude });\n  }\n\n  return (\n    <div css={divStyle}>\n      <Navbar className=\"bp3-dark\">\n        <Navbar.Group align={Alignment.LEFT}>\n          <Navbar.Heading>Panorama</Navbar.Heading>\n          <span\n            css={css`\n              margin-left: 48px;\n              margin-right: 12px;\n            `}\n          >\n            Location\n          </span>\n          <div className=\"bp3-select\">\n            <select defaultValue={currentCountry}>\n              {Object.keys(countries).map((country, index) => (\n                <option key={index} onClick={() => dispatch(setCountry(country))}>\n                  {country}\n                </option>\n              ))}\n            </select>\n          </div>\n        </Navbar.Group>\n      </Navbar>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n        onViewportChange={viewport => {\n          setViewport(viewport);\n        }}\n      />\n      <News />\n      <Tweets />\n      <GoogleTrends />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.countries\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport {\n  SET_LOCATION,\n  FETCH_TRENDING_TWEETS_PENDING,\n  FETCH_TRENDING_TWEETS_SUCCESS,\n  FETCH_TRENDING_TWEETS_ERROR,\n  FETCH_NEWS_PENDING,\n  FETCH_NEWS_SUCCESS,\n  FETCH_NEWS_ERROR,\n  FETCH_GOOGLE_TRENDS_PENDING,\n  FETCH_GOOGLE_TRENDS_SUCCESS,\n  FETCH_GOOGLE_TRENDS_ERROR\n} from \"actions/actions\";\n\nconst lookupCountries = {\n  Algeria: { id: 1253079, \"ISO-3166\": \"dz\", lat: 28, lng: 3 },\n  Argentina: { id: 332471, \"ISO-3166\": \"ar\", lat: -34, lng: -64 },\n  Australia: { id: 1098081, \"ISO-3166\": \"au\", lat: -27, lng: 133 },\n  Austria: { id: 551801, \"ISO-3166\": \"at\", lat: 47.33333333, lng: 13.33333333 },\n  Bahrain: { id: 23424753, \"ISO-3166\": \"bh\", lat: 26, lng: 50.55 },\n  Belarus: { id: 824382, \"ISO-3166\": \"by\", lat: 53, lng: 28 },\n  Belgium: { id: 23424757, \"ISO-3166\": \"be\", lat: 50.83333333, lng: 4 },\n  Brazil: { id: 455819, \"ISO-3166\": \"br\", lat: -10, lng: -55 },\n  Canada: { id: 2972, \"ISO-3166\": \"ca\", lat: 60, lng: -95 },\n  Chile: { id: 349859, \"ISO-3166\": \"cl\", lat: -30, lng: -71 },\n  Colombia: { id: 368148, \"ISO-3166\": \"co\", lat: 4, lng: -72 },\n  Denmark: { id: 23424796, \"ISO-3166\": \"dk\", lat: 56, lng: 10 },\n  \"Dominican Republic\": { id: 76456, \"ISO-3166\": \"do\", lat: 19, lng: -70.66666666 },\n  Ecuador: { id: 375732, \"ISO-3166\": \"ec\", lat: -2, lng: -77.5 },\n  Egypt: { id: 1521643, \"ISO-3166\": \"eg\", lat: 27, lng: 30 },\n  France: { id: 580778, \"ISO-3166\": \"fr\", lat: 46, lng: 2 },\n  Germany: { id: 638242, \"ISO-3166\": \"de\", lat: 51, lng: 9 },\n  Ghana: { id: 1326075, \"ISO-3166\": \"gh\", lat: 8, lng: -2 },\n  Greece: { id: 946738, \"ISO-3166\": \"gr\", lat: 39, lng: 22 },\n  Guatemala: { id: 83123, \"ISO-3166\": \"gt\", lat: 15.5, lng: -90.25 },\n  India: { id: 2282863, \"ISO-3166\": \"in\", lat: 20, lng: 77 },\n  Indonesia: { id: 1030077, \"ISO-3166\": \"id\", lat: -5, lng: 120 },\n  Ireland: { id: 560472, \"ISO-3166\": \"ie\", lat: 53, lng: -8 },\n  Israel: { id: 1967449, \"ISO-3166\": \"il\", lat: 31.5, lng: 34.75 },\n  Italy: { id: 711080, \"ISO-3166\": \"it\", lat: 42.83333333, lng: 12.83333333 },\n  Japan: { id: 1110809, \"ISO-3166\": \"jp\", lat: 36, lng: 138 },\n  Jordan: { id: 1968902, \"ISO-3166\": \"jo\", lat: 31, lng: 36 },\n  Kenya: { id: 1528335, \"ISO-3166\": \"ke\", lat: 1, lng: 38 },\n  Kuwait: { id: 23424870, \"ISO-3166\": \"kw\", lat: 29.5, lng: 45.75 },\n  Latvia: { id: 854823, \"ISO-3166\": \"lv\", lat: 57, lng: 25 },\n  Lebanon: { id: 23424873, \"ISO-3166\": \"lb\", lat: 33.83333333, lng: 35.83333333 },\n  Malaysia: { id: 1141268, \"ISO-3166\": \"my\", lat: 2.5, lng: 112.5 },\n  Mexico: { id: 110978, \"ISO-3166\": \"mx\", lat: 23, lng: -102 },\n  Netherlands: { id: 726874, \"ISO-3166\": \"nl\", lat: 52.5, lng: 5.75 },\n  \"New Zealand\": { id: 2348079, \"ISO-3166\": \"nz\", lat: -41, lng: 174 },\n  Nigeria: { id: 1387660, \"ISO-3166\": \"ng\", lat: 10, lng: 8 },\n  Norway: { id: 857105, \"ISO-3166\": \"no\", lat: 62, lng: 10 },\n  Oman: { id: 2268284, \"ISO-3166\": \"om\", lat: 21, lng: 57 },\n  Pakistan: { id: 2211096, \"ISO-3166\": \"pk\", lat: 30, lng: 70 },\n  Panama: { id: 23424924, \"ISO-3166\": \"pa\", lat: 9, lng: -80 },\n  Peru: { id: 418440, \"ISO-3166\": \"pe\", lat: -10, lng: -76 },\n  Philippines: { id: 1167715, \"ISO-3166\": \"ph\", lat: 13, lng: 122 },\n  Poland: { id: 493417, \"ISO-3166\": \"pl\", lat: 52, lng: 20 },\n  Portugal: { id: 23424925, \"ISO-3166\": \"pt\", lat: 39.5, lng: -8 },\n  \"Puerto Rico\": { id: 23424935, \"ISO-3166\": \"pr\", lat: 18.25, lng: -66.5 },\n  Qatar: { id: 23424930, \"ISO-3166\": \"qa\", lat: 25.5, lng: 51.25 },\n  \"Saudi Arabia\": { id: 1937801, \"ISO-3166\": \"sa\", lat: 25, lng: 45 },\n  Singapore: { id: 1062617, \"ISO-3166\": \"sg\", lat: 1.36666666, lng: 103.8 },\n  \"South Africa\": { id: 1580913, \"ISO-3166\": \"za\", lat: -29, lng: 24 },\n  Spain: { id: 753692, \"ISO-3166\": \"es\", lat: 40, lng: -4 },\n  Sweden: { id: 890869, \"ISO-3166\": \"se\", lat: 62, lng: 15 },\n  Switzerland: { id: 782538, \"ISO-3166\": \"ch\", lat: 47, lng: 8 },\n  Thailand: { id: 1225448, \"ISO-3166\": \"th\", lat: 15, lng: 100 },\n  Turkey: { id: 2323778, \"ISO-3166\": \"tr\", lat: 39, lng: 35 },\n  Ukraine: { id: 918981, \"ISO-3166\": \"ua\", lat: 49, lng: 32 },\n  \"United Arab Emirates\": { id: 1940119, \"ISO-3166\": \"ae\", lat: 24, lng: 54 }\n};\n\nconst countriesInitialState = {\n  current: \"Singapore\",\n  available: lookupCountries\n};\n\nconst countries = (state = countriesInitialState, action) => {\n  switch (action.type) {\n    case SET_LOCATION:\n      return Object.assign({}, state, { current: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst tweetsInitialState = {\n  pending: false,\n  data: [],\n  error: null\n};\n\nconst tweets = (state = tweetsInitialState, action) => {\n  switch (action.type) {\n    case FETCH_TRENDING_TWEETS_PENDING:\n      return { ...state, pending: true };\n    case FETCH_TRENDING_TWEETS_SUCCESS:\n      return { ...state, pending: false, data: action.payload, receivedAt: action.receivedAt };\n    case FETCH_TRENDING_TWEETS_ERROR:\n      return { ...state, pending: false, error: action.error };\n    default:\n      return state;\n  }\n};\n\nconst newsInitialState = {\n  pending: false,\n  data: [],\n  error: null\n};\n\nconst news = (state = newsInitialState, action) => {\n  switch (action.type) {\n    case FETCH_NEWS_PENDING:\n      return { ...state, pending: true };\n    case FETCH_NEWS_SUCCESS:\n      return { ...state, pending: false, data: action.payload, receivedAt: action.receivedAt };\n    case FETCH_NEWS_ERROR:\n      return { ...state, pending: false, error: action.error };\n    default:\n      return state;\n  }\n};\n\nconst googleTrendsInitialState = {\n  pending: false,\n  data: [],\n  error: null\n};\n\nconst googleTrends = (state = googleTrendsInitialState, action) => {\n  switch (action.type) {\n    case FETCH_GOOGLE_TRENDS_PENDING:\n      return { ...state, pending: true, error: null };\n    case FETCH_GOOGLE_TRENDS_SUCCESS:\n      return { ...state, pending: false, data: action.payload, receivedAt: action.receivedAt, error: null };\n    case FETCH_GOOGLE_TRENDS_ERROR:\n      return { ...state, pending: false, error: action.error };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  countries,\n  tweets,\n  news,\n  googleTrends\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"reducers/reducers\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}